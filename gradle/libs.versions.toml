[versions]

kotlin = "1.8.20"
agp = "8.0.1"
compose = "1.4.0"
androidx-appcompat = "1.6.1"
androidx-activityCompose = "1.7.0"
compose-uitooling = "1.4.1"
libres = "1.1.8"
voyager = "1.0.0-rc06"
composeImageLoader = "1.4.1"
napier = "2.6.1"
buildConfig = "3.1.0"
kotlinx-coroutines = "1.6.4"
insetsx = "0.1.0-alpha07"
ktor = "2.3.0"
composeIcons = "1.1.0"
kotlinx-serialization = "1.5.1"
kotlinx-datetime = "0.4.0"
multiplatformSettings = "1.0.0"
koin = "3.4.0"
sqlDelight = "2.0.0-alpha05"
decompose_version = "2.0.0-beta-01"
decompose-version-experimental = "2.1.0-compose-experimental-alpha-02"
firebase = "1.8.0"
kodein = "7.20.1"
reaktive-version = "1.2.1"
essenty-version = "1.1.0"
reflect-version = "1.8.22"
kstore-version = "0.6.0"

[libraries]

androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-uitooling" }
libres = { module = "io.github.skeptick.libres:libres-compose", version.ref = "libres" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
insetsx = { module = "com.moriatsushi.insetsx:insetsx", version.ref = "insetsx" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }

composeIcons-featherIcons = { module = "br.com.devsrsouza.compose.icons:feather", version.ref = "composeIcons" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "reflect-version"}
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore-version" }
sqlDelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-driver-sqljs = { module = "app.cash.sqldelight:sqljs-driver", version.ref = "sqlDelight" }
decompose-base = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose_version" }
decompose-extensions-compose = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose_version" }
decompose-extensions-compose-experimental = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose-version-experimental" }
firebase-auth ={module = "dev.gitlive:firebase-auth", version.ref = "firebase"}
kodein-di ={module = "org.kodein.di:kodein-di", version.ref = "kodein"}
reaktive ={module = "com.badoo.reaktive:reaktive", version.ref = "reaktive-version"}
essenty ={module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty-version"}
kstore-file ={module = "io.github.xxfast:kstore-file", version.ref = "kstore-version"}
kstore-storage ={module = "io.github.xxfast:kstore-storage", version.ref = "kstore-version"}


[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
libres = { id = "io.github.skeptick.libres", version.ref = "libres" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
darwin = { id = "com.arkivanov.parcelize.darwin"}
parcelize = { id = "kotlin-parcelize"}
